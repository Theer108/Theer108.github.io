<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kafka on Łukasz Chrząszcz</title>
    <link>http://chrzaszcz.dev/tags/kafka/</link>
    <description>Recent content in kafka on Łukasz Chrząszcz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://chrzaszcz.dev/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What happens when a new consumer joins the group in Kafka?</title>
      <link>http://chrzaszcz.dev/2019/06/kafka-rebalancing/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://chrzaszcz.dev/2019/06/kafka-rebalancing/</guid>
      <description>What is a rebalancing? As you know, all messages on a topic are spread out among the members of consumer group. Every consumer has its set of partitions assigned exclusively to it and rebalancing is all about maintaining all partitions assigned to active consumers.
When one consumer dies Kafka needs to reassign orphaned partitions to the rest of the consumers. Similarly, when a new consumer joins the group Kafka needs to free up some partitions and assign them to the new consumers (if it can).</description>
    </item>
    
    <item>
      <title>What does heartbeat thread do in Kafka Consumer?</title>
      <link>http://chrzaszcz.dev/2019/06/kafka-heartbeat-thread/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://chrzaszcz.dev/2019/06/kafka-heartbeat-thread/</guid>
      <description>Recap In the previous post we&amp;rsquo;ve discussed how does Kafka Consumer work underneath. Now we know what are the very first steps to fetch records.
Remember what I&amp;rsquo;ve intentionally omitted from previous post? That&amp;rsquo;s right! Heartbeat thread. We will investigate what it does exactly and how it works in general.
Samples and setup If you want to run some samples on debug to discover heartbeat code by yourself, please by all means use my simple project on this GitHub repo.</description>
    </item>
    
    <item>
      <title>What happens when you call poll on Kafka Consumer?</title>
      <link>http://chrzaszcz.dev/2019/06/16/kafka-consumer-poll/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://chrzaszcz.dev/2019/06/16/kafka-consumer-poll/</guid>
      <description>Recap In the previous post we&amp;rsquo;ve discussed what Kafka is and how to interact with it. We explored how consumers subscribe to the topic and consume messages from it. We know that consumers form a group called consumer group and that Kafka split messages among members of the consumer group.
That&amp;rsquo;s of course after the initialization is finished, but what exactly is done in the background when you create a new consumer and call the very first poll?</description>
    </item>
    
    <item>
      <title>Kafka 101</title>
      <link>http://chrzaszcz.dev/2019/05/26/kafka-101/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://chrzaszcz.dev/2019/05/26/kafka-101/</guid>
      <description>What is Kafka? Kafka is a popular stream-processing platform. What does it mean? You can think of it as a service that takes messages from one place and put it in another. It allows you to construct asynchronous processing of events, create pub-sub mechanism or distribute work evenly among worker services - the are many use cases for it.
Whatever your use case is, you need to know a few basic ideas about Kafka.</description>
    </item>
    
  </channel>
</rss>